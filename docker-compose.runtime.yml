services:
  # HashiCorp Vault for Secrets Management
  vault:
    image: hashicorp/vault:1.15.2
    container_name: scribe-vault
    cap_add:
      - IPC_LOCK
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=scribe-root-token
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
    ports:
      - "8200:8200"
    volumes:
      - ./tools/scribe/deployment/vault:/vault/config:ro
      - ./tools/scribe/deployment/vault/init:/vault/init:ro
      - vault_data:/vault/data
    command: >
      sh -c "
        vault server -dev -dev-root-token-id=scribe-root-token -dev-listen-address=0.0.0.0:8200 &
        sleep 10 &&
        export VAULT_ADDR=http://localhost:8200 &&
        export VAULT_TOKEN=scribe-root-token &&
        /vault/init/init-vault.sh &&
        wait
      "
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - scribe-network

  # NATS Server for Event Bus
  nats:
    image: nats:2.10-alpine
    container_name: scribe-nats
    ports:
      - "4222:4222"
      - "8222:8222"  # HTTP monitoring
    command: >
      --http_port 8222
      --jetstream
      --store_dir /data
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - scribe-network

  # Jaeger for Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: scribe-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC (receives from OTLP collector)
    networks:
      - scribe-network

  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: scribe-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./tools/scribe/deployment/observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./tools/scribe/deployment/observability/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - scribe-network

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    container_name: scribe-otel-collector
    command: ["--config=/etc/otelcol-contrib/otel-collector.yaml"]
    volumes:
      - ./tools/scribe/deployment/observability/otel-collector.yaml:/etc/otelcol-contrib/otel-collector.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8889:8889"   # Prometheus metrics endpoint
      - "13133:13133" # Health check
      - "1777:1777"   # pprof endpoint
      - "55679:55679" # zpages endpoint
    depends_on:
      - jaeger
      - prometheus
    networks:
      - scribe-network

  # Grafana for Observability Dashboard
  grafana:
    image: grafana/grafana:10.1.0
    container_name: scribe-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - ./tools/scribe/deployment/observability/grafana_datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
      - ./tools/scribe/deployment/observability/dashboards:/etc/grafana/provisioning/dashboards:ro
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - scribe-network

  # Scribe Engine (for integration testing)
  scribe-engine:
    image: python:3.12-slim
    container_name: scribe-engine
    working_dir: /app
    volumes:
      - .:/app
      - ./tools/scribe/deployment/certificates:/etc/ssl/scribe:ro
    environment:
      # HMA v2.2 Mandatory Environment Variables
      - SCRIBE_MTLS_ENABLED=true
      - SCRIBE_TLS_CA=/etc/ssl/scribe/ca.crt
      - SCRIBE_TLS_CERT=/etc/ssl/scribe/server.crt
      - SCRIBE_TLS_KEY=/etc/ssl/scribe/server.key
      
      # OpenTelemetry Configuration
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_TRACE_SAMPLING_RATE=1.0
      - OTEL_SERVICE_NAME=scribe-engine
      
      # NATS Configuration
      - NATS_URL=nats://nats:4222
      
      # Scribe Configuration
      - SCRIBE_LOG_LEVEL=DEBUG
      - SCRIBE_REPORT_DIR=/app/tools/reports
      
      # Vault Configuration for Secret Management
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=scribe-root-token
      - VAULT_AUTH_METHOD=token
      - SCRIBE_VAULT_ENABLED=true
    command: >
      bash -c "
        apt-get update && 
        apt-get install -y gcc && 
        pip install -r tools/scribe/requirements.txt &&
        pip install -e tools/scribe/ &&
        python -m tools.scribe.main --config /app/test-environment/runtime-config/scribe_runtime_config.yaml
      "
    depends_on:
      - nats
      - otel-collector
      - vault
    networks:
      - scribe-network
    ports:
      - "9469:9469"  # Health check endpoint

volumes:
  vault_data:
  nats_data:
  prometheus_data:
  grafana_data:

networks:
  scribe-network:
    driver: bridge