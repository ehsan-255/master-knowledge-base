name: Update Frontmatter Timestamps

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - '**/*.md'
  pull_request:
    branches: [ main, master ]
    paths:
      - '**/*.md'

jobs:
  update-timestamps:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need to compare with previous commit
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml
    
    - name: Get changed markdown files
      id: changed-files
      run: |
        # Get list of changed .md files
        CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep '\.md$' || echo "")
        echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT
        echo "Changed files: $CHANGED_FILES"
    
    - name: Update timestamps for real changes
      if: steps.changed-files.outputs.changed_files != ''
      run: |
        # Make script executable
        chmod +x master-knowledge-base/tools/frontmatter-management/date-time-manager.py
        
        # Update timestamps for changed files (with time included for commits)
        python master-knowledge-base/tools/frontmatter-management/date-time-manager.py \
          commit-update --time \
          ${{ steps.changed-files.outputs.changed_files }}
    
    - name: Commit timestamp updates
      if: steps.changed-files.outputs.changed_files != ''
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are changes to commit
        if git diff --quiet; then
          echo "No timestamp changes to commit"
        else
          git add -A
          git commit -m "chore: update frontmatter timestamps [skip ci]"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Run TODO scan (on main branch only)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        # Make script executable
        chmod +x master-knowledge-base/tools/todo-tracker.py
        
        # Scan for TODOs and generate report
        python master-knowledge-base/tools/todo-tracker.py scan \
          --root master-knowledge-base \
          --output todo-report.json
        
        # Generate markdown report
        python master-knowledge-base/tools/todo-tracker.py report \
          --format markdown \
          --input todo-report.json \
          --output TODO-REPORT.md
    
    - name: Commit TODO report (main branch only)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        # Check if TODO report changed
        if git diff --quiet TODO-REPORT.md; then
          echo "No TODO report changes"
        else
          git add TODO-REPORT.md todo-report.json
          git commit -m "chore: update TODO report [skip ci]" || echo "No TODO changes to commit"
          git push || echo "No TODO push needed"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 