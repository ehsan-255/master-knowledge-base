{
  "timestamp": "2025-06-07T09:10:40.191214",
  "test_suites": {
    "KB Linter Tests": {
      "exit_code": 1,
      "stdout": "DEBUG LinterConfig: Initial repo_base_path: C:\\Users\\ELIANA~1\\AppData\\Local\\Temp\\tmpm44w296m\\mock_repo\nDEBUG LinterConfig: self.repo_base (resolved): C:\\Users\\E L I A N A\\AppData\\Local\\Temp\\tmpm44w296m\\mock_repo\\master-knowledge-base\nDEBUG LinterConfig: local dist_path_local for index: C:\\Users\\E L I A N A\\AppData\\Local\\Temp\\tmpm44w296m\\mock_repo\\master-knowledge-base\\dist\nDEBUG LinterConfig: Attempting to load index directly from: C:\\Users\\E L I A N A\\AppData\\Local\\Temp\\tmpm44w296m\\mock_repo\\master-knowledge-base\\dist\\standards_index.json\n",
      "stderr": "test_broken_internal_link (test_kb_linter.TestKBLinter.test_broken_internal_link) ... ok\ntest_changelog_self_referential_url_invalid (test_kb_linter.TestKBLinter.test_changelog_self_referential_url_invalid) ... FAIL\ntest_changelog_self_referential_url_valid (test_kb_linter.TestKBLinter.test_changelog_self_referential_url_valid) ... ok\ntest_criticality_field_invalid_lowercase (test_kb_linter.TestKBLinter.test_criticality_field_invalid_lowercase) ... ok\ntest_criticality_field_valid_mixed_case (test_kb_linter.TestKBLinter.test_criticality_field_valid_mixed_case) ... ok\ntest_criticality_tag_invalid_mixedcase (test_kb_linter.TestKBLinter.test_criticality_tag_invalid_mixedcase) ... FAIL\ntest_criticality_tag_valid_lowercase (test_kb_linter.TestKBLinter.test_criticality_tag_valid_lowercase) ... ok\ntest_invalid_date_format (test_kb_linter.TestKBLinter.test_invalid_date_format) ... ok\ntest_invalid_date_values (test_kb_linter.TestKBLinter.test_invalid_date_values) ... ok\ntest_invalid_info_type (test_kb_linter.TestKBLinter.test_invalid_info_type) ... ok\ntest_invalid_lifecycle_gatekeeper (test_kb_linter.TestKBLinter.test_invalid_lifecycle_gatekeeper) ... ok\ntest_invalid_path_based_link (test_kb_linter.TestKBLinter.test_invalid_path_based_link) ... ok\ntest_invalid_primary_domain (test_kb_linter.TestKBLinter.test_invalid_primary_domain) ... ok\ntest_invalid_standard_id_format_lowercase (test_kb_linter.TestKBLinter.test_invalid_standard_id_format_lowercase) ... ok\ntest_invalid_standard_id_format_nondomain (test_kb_linter.TestKBLinter.test_invalid_standard_id_format_nondomain) ... ok\ntest_invalid_sub_domain_for_primary_domain (test_kb_linter.TestKBLinter.test_invalid_sub_domain_for_primary_domain) ... ok\ntest_invalid_tag_category_prefix (test_kb_linter.TestKBLinter.test_invalid_tag_category_prefix) ... ok\ntest_key_order_invalid (test_kb_linter.TestKBLinter.test_key_order_invalid) ... ok\ntest_key_order_valid (test_kb_linter.TestKBLinter.test_key_order_valid) ... ok\ntest_multiple_key_order_invalid (test_kb_linter.TestKBLinter.test_multiple_key_order_invalid) ... ok\ntest_valid_internal_link (test_kb_linter.TestKBLinter.test_valid_internal_link) ... ok\ntest_valid_standard_id_format (test_kb_linter.TestKBLinter.test_valid_standard_id_format) ... ok\ntest_valid_sub_domain_for_another_primary_domain (test_kb_linter.TestKBLinter.test_valid_sub_domain_for_another_primary_domain) ... ok\n\n======================================================================\nFAIL: test_changelog_self_referential_url_invalid (test_kb_linter.TestKBLinter.test_changelog_self_referential_url_invalid)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\E L I A N A\\Downloads\\_apmdd_vault\\master-knowledge-base\\master-knowledge-base\\tools\\linter\\tests\\test_kb_linter.py\", line 744, in test_changelog_self_referential_url_invalid\n    self.assert_has_error(results, \"must be self-referential\", key=\"change_log_url\")\n  File \"C:\\Users\\E L I A N A\\Downloads\\_apmdd_vault\\master-knowledge-base\\master-knowledge-base\\tools\\linter\\tests\\test_kb_linter.py\", line 172, in assert_has_error\n    self.fail(f\"Expected error containing '{message_substring}' (and key '{key}' if specified) not found in {results.get('errors')}\")\nAssertionError: Expected error containing 'must be self-referential' (and key 'change_log_url' if specified) not found in []\n\n======================================================================\nFAIL: test_criticality_tag_invalid_mixedcase (test_kb_linter.TestKBLinter.test_criticality_tag_invalid_mixedcase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\E L I A N A\\Downloads\\_apmdd_vault\\master-knowledge-base\\master-knowledge-base\\tools\\linter\\tests\\test_kb_linter.py\", line 689, in test_criticality_tag_invalid_mixedcase\n    self.assert_has_error(results, \"not in defined list. Valid (lowercase from .txt)\")\n  File \"C:\\Users\\E L I A N A\\Downloads\\_apmdd_vault\\master-knowledge-base\\master-knowledge-base\\tools\\linter\\tests\\test_kb_linter.py\", line 172, in assert_has_error\n    self.fail(f\"Expected error containing '{message_substring}' (and key '{key}' if specified) not found in {results.get('errors')}\")\nAssertionError: Expected error containing 'not in defined list. Valid (lowercase from .txt)' (and key 'None' if specified) not found in []\n\n----------------------------------------------------------------------\nRan 23 tests in 0.262s\n\nFAILED (failures=2)\n",
      "passed": false,
      "test_count": 0,
      "passed_count": 0,
      "failed_count": 0
    },
    "Index Generator Tests": {
      "exit_code": 1,
      "stdout": "",
      "stderr": "test_duplicate_standard_id_skipped (test_generate_index.TestGenerateIndex.test_duplicate_standard_id_skipped) ... INFO: Scanning for Markdown files in: C:\\Users\\ELIANA~1\\AppData\\Local\\Temp\\tmpuj5k9ww0\\mock_repo\\master-knowledge-base\\standards\\src\\test_docs...\nERROR: Duplicate standard_id 'AS-DUPE-001' found. Original in index, this one skipped. File: standards/src/test_docs/CS-DUPE-SAMEID-002.md\nINFO: \n--- Index Generation Summary ---\nINFO: Total .md files found: 2\nINFO: Successfully indexed: 1\nINFO: Skipped (due to errors/missing fields): 1\nINFO: Skipped file details:\nINFO:   - standards/src/test_docs/CS-DUPE-SAMEID-002.md: Duplicate standard_id 'AS-DUPE-001' found. Original in index, this one skipped.\nINFO: \nGenerated index successfully validated against schema.\nINFO: \nWriting index to: C:\\Users\\ELIANA~1\\AppData\\Local\\Temp\\tmpuj5k9ww0\\mock_repo\\..\\tmp8cbxrerb\\standards_index.json...\nINFO: Successfully generated ..\\tmp8cbxrerb\\standards_index.json\nok\ntest_extract_frontmatter_valid (test_generate_index.TestGenerateIndex.test_extract_frontmatter_valid) ... ok\ntest_extract_metadata_and_status_derivation (test_generate_index.TestGenerateIndex.test_extract_metadata_and_status_derivation) ... FAIL\n\n======================================================================\nFAIL: test_extract_metadata_and_status_derivation (test_generate_index.TestGenerateIndex.test_extract_metadata_and_status_derivation)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\E L I A N A\\Downloads\\_apmdd_vault\\master-knowledge-base\\master-knowledge-base\\tools\\indexer\\tests\\test_generate_index.py\", line 157, in test_extract_metadata_and_status_derivation\n    self.assertEqual(entry[\"filepath\"], filepath_rel) # Should be unchanged\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError: 'standards/src/test_docs/CS-PROCESS-001.md' != 'master-knowledge-base\\\\standards\\\\src\\\\test_docs\\\\CS-PROCESS-001.md'\n- standards/src/test_docs/CS-PROCESS-001.md\n?                      ^         ^   ^         ^\n+ master-knowledge-base\\standards\\src\\test_docs\\CS-PROCESS-001.md\n?                      ^         ^   ^         ^\n\n\n----------------------------------------------------------------------\nRan 3 tests in 0.082s\n\nFAILED (failures=1)\n",
      "passed": false,
      "test_count": 0,
      "passed_count": 0,
      "failed_count": 0
    },
    "Collection Builder Tests": {
      "exit_code": 0,
      "stdout": "",
      "stderr": "test_filter_standards (test_generate_collections.TestGenerateCollections.test_filter_standards) ... ok\ntest_generate_gfm_anchor (test_generate_collections.TestGenerateCollections.test_generate_gfm_anchor) ... ok\ntest_get_body_content_from_markdown (test_generate_collections.TestGenerateCollections.test_get_body_content_from_markdown) ... ok\n\n----------------------------------------------------------------------\nRan 3 tests in 0.001s\n\nOK\n",
      "passed": true,
      "test_count": 0,
      "passed_count": 0,
      "failed_count": 0
    },
    "Naming Enforcer Tests": {
      "exit_code": -3,
      "stdout": "",
      "stderr": "Test file not found: C:\\Users\\E L I A N A\\Downloads\\_apmdd_vault\\master-knowledge-base\\master-knowledge-base\\tools\\naming-enforcer\\test_include_functionality.py",
      "passed": false,
      "test_count": 0,
      "passed_count": 0,
      "failed_count": 1
    }
  },
  "summary": {
    "total_suites": 4,
    "passed_suites": 1,
    "failed_suites": 3,
    "total_tests": 0,
    "passed_tests": 0,
    "failed_tests": 1
  }
}